require 'rubygems'
require 'wckbapi'

client = WCKBAPI::Client.new :wskey => '[your_key_here]'

objR, objc = client.GetCollectionInfo(:collection_uid => 'NPG.journals')
puts "Collection Info: \n"
puts "Title: " + objc[0].title
puts "Collection_uid: " + objc[0].collection_uid


puts "\n"
puts "******************* Collection Info ******************"
objR, objc = client.GetCollectionInfo(:collection_uid => 'BMC.openAccess', 
				:institution_id => '128807',
				:type => 'search')

puts "Collection Info (enum):\n"
puts "Number of results: " + objR.totalResults.to_s + "\n"
objc.each {|i|
  puts "Title: " + i.title + "\n"
  puts "Collection_uid: " + i.collection_uid + "\n"
  puts "\n"
} 

puts "\n" 
puts "******************* Collection Info Search **************"
objR, objc = client.GetCollectionInfo(:institution_id => '128807', 
			        :title => 'S%', 
			        :type => 'search')

puts "Collection Info Search (enum):\n"
puts "Number of Results: " + objR.totalResults.to_s + "\n"
objc.each {|i|
  puts "Title: " + i.title + "\n"
  puts "Collection_uid: " + i.collection_uid + "\n"
  puts "\n"
}

puts "\n"
puts "********************** SearchCollections ***************"
objR, objc = client.SearchCollections(:institution_id => "128807", 
				:title => 'S%')

puts "Search Collection (enum):\n"
puts "Number of Results: " + objR.totalResults.to_s + "\n"
objc.each {|i|
  puts "Title: " + i.title + "\n"
  puts "Collection_uid: " + i.collection_uid + "\n"
  puts "\n"
}

puts "\n"
puts "*********************** Retrieve Providers *************"
objR, objP = client.GetProviderInfo()
objP.each {|i|
  puts "Title: " + i.title + "\n"
  puts "id: " + i.id + "\n"
}

puts "\n"
puts "********************** Retrieve Providers **"
objR, objP = client.GetProviderInfo(:title => 'BioOne')
objP.each {|i|
  puts "Title: " + i.title + "\n"
  puts "id: " + i.id + "\n"
}

puts "\n"
puts "********************** Retrieve Providers Search ********"
objR, objP = client.SearchProviders(:institution_id => 128807)
puts "Number of Results: " + objR.totalResults.to_s + "\n"
objP.each {|i|
  puts "Title: " + i.title + "\n"
  puts "id: " + i.id + "\n"
}

puts "\n"
puts "********************** Return and entry *****************"
objR, objE = client.GetEntry(:collection_uid => 'ebrary.humanities',
		       :entry_uid => '5639208')

objE.each {|i|
  puts "Title: " + i.title + "\n"
  puts "id: " + i.id + "\n"
}

puts "\n"
puts "********************* Return entry with entry id *******"

objR, objE = client.GetEntry(:id => 'http://worldcat.org/webservices/kb/rest/entries/ebrary.humanities,5639208')
objE.each {|i|
  puts "Title: " + i.title + "\n"
  puts "id: " + i.id + "\n"
}

puts "\n"

puts "\n"
puts "********************* Search Entries *******************"
objR, objE = client.SearchEntries(:institution_id => '128807',
			    :title => '"B%"')

puts "Number of Results: " + objR.totalResults.to_s + "\n"
objE.each {|i|
  puts "Title: " + i.title + "\n"
  puts "id: " + i.id + "\n"
}

puts "\n\n"

puts "finished with tests"
